name: Spring Boot CI/CD with kind

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Display java version
      run: java --version    

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Install kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Create kind cluster
      run: kind create cluster --wait 60s

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Build Docker image
      run: docker build -t demo:latest .

    - name: Load Docker image into kind
      run: kind load docker-image demo:latest

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Wait for Pod to be Ready
      run: |
        kubectl wait --for=condition=ready pod -l app=demo --timeout=60s

    - name: Port Forward and Test App
      run: |
        POD_NAME=$(kubectl get pods -l app=demo -o jsonpath="{.items[0].metadata.name}")
        kubectl port-forward pod/$POD_NAME 8080:8080 &
        sleep 5
        curl http://localhost:8080

    - name: Display Deployments, Namespaces, Nodes, and Pods
      run: |
         echo "Displaying Deployments:"
         kubectl get deployment

         echo "Displaying Namespaces:"
         kubectl get ns

         echo "Displaying Nodes:"
         kubectl get nodes

         echo "Displaying Pods:"
         kubectl get pods
    - name: Port Forward and Test App
      run: |
        POD_NAME=$(kubectl get pods -l app=demo -o jsonpath="{.items[0].metadata.name}")
        kubectl port-forward pod/$POD_NAME 8080:8080 &
        sleep 5
        echo "Response from application:"
        curl -s http://localhost:8080
     
     