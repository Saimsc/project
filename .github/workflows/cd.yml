name: Main CI/CD

on:
  push:
    branches:
      - dev
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  security-events: write  

jobs:
  get-config:
    runs-on: ubuntu-latest
    outputs:
      build_code: ${{ steps.read.outputs.build_code }}
      build_docker: ${{ steps.read.outputs.build_docker }}
      codeql: ${{ steps.read.outputs.codeql }}
      deploy: ${{ steps.read.outputs.deploy }}
      image_tag: ${{ steps.read.outputs.image_tag }}
      image_name: ${{ steps.read.outputs.image_name }}
      fallback_image: ${{ steps.read.outputs.fallback_image }}
      helm_release_name: ${{ steps.read.outputs.helm_release_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Debug files
        run: |
          echo "Current directory: $PWD"
          ls -R

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Debug files
        run: |
          echo "Current directory: $PWD"
          ls -R
          
      - name: Read config.json
        id: read
        run: |
          CONFIG_FILE=cicd/config.json
          if [ ! -f "$CONFIG_FILE" ]; then
           echo "$CONFIG_FILE not found!"
           exit 1
           fi
          echo "build_code=$(jq -r '.build_code // "false"' config.json)" >> $GITHUB_OUTPUT
          echo "build_docker=$(jq -r '.build_docker // "false"' config.json)" >> $GITHUB_OUTPUT
          echo "codeql=$(jq -r '.codeql // "false"' config.json)" >> $GITHUB_OUTPUT
          echo "deploy=$(jq -r '.deploy // "false"' config.json)" >> $GITHUB_OUTPUT
          echo "image_tag=$(jq -r '.image_tag // "latest"' config.json)" >> $GITHUB_OUTPUT
          echo "image_name=$(jq -r '.image_name // "myapp"' config.json)" >> $GITHUB_OUTPUT
          echo "fallback_image=$(jq -r '.fallback_image // "nginx"' config.json)" >> $GITHUB_OUTPUT
          echo "helm_release_name=$(jq -r '.helm_release_name // "demo"' config.json)" >> $GITHUB_OUTPUT

  run-ci-cd:
    needs: get-config
    uses: Saimsc/cd-template/.github/workflows/cd-main.yml@dev
    with:
      build_code: ${{ needs.get-config.outputs.build_code }}
      build_docker: ${{ needs.get-config.outputs.build_docker }}
      codeql: ${{ needs.get-config.outputs.codeql }}
      deploy: ${{ needs.get-config.outputs.deploy }}
      image_tag: ${{ needs.get-config.outputs.image_tag }}
      image_name: ${{ needs.get-config.outputs.image_name }}
      fallback_image: ${{ needs.get-config.outputs.fallback_image }}
      helm_release_name: ${{ needs.get-config.outputs.helm_release_name }}
