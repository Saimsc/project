name: Spring Boot CI/CD with kind and ngrok

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Install kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Create kind cluster
      run: kind create cluster --wait 60s

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Build Docker image
      run: docker build -t myapp:V1 .

    - name: Load Docker image into kind
      run: kind load docker-image myapp:V1

    - name: Deploy App and Ingress
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Show Resources
      run: |
        kubectl get pods -A
        kubectl get svc -A
        kubectl get ingress -A
        hostname -i
    - name: Port-forward Service and Test
      run: |
        # Forward local port 8080 to your service port (NodePort or ClusterIP + port)
        kubectl port-forward svc/springboot-service 8080:80 &
        sleep 5  # wait for port-forward to start
        echo "Testing the application endpoint"
        curl -v http://localhost:8080
